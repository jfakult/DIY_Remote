{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/butlah/node/apps/remote/remote/client/src/App.js\";\nimport React from \"react\";\nimport './App.css';\nimport Cookies from 'js-cookie'; //import lightbulb from './img/lightbulb.png';\n\nimport loading from \"./img/loading.gif\"; //import loading_small from \"./img/loading_small.gif\"\n\nvar images = require.context(\"./img\", true); //const POLL_INTERVAL = 4000;\n//const MIN_TIME_BETWEEN_UPDATES = 100; // rtt is probably something like 50ms, unit in ms\n\n\nfunction expand(event, deviceData) {\n  var button = event.currentTarget;\n  var expanded = button.classList.contains(\"expanded\");\n\n  if (expanded) {\n    console.log(\"Clicked expanded button\");\n  } else {\n    //button.classList.add(\"expanded\")\n    button.focus();\n    setTimeout(function () {\n      button.scrollIntoView({\n        block: \"start\",\n        behavior: \"smooth\"\n      });\n    }, 600); // Matched with transition time value in css.button.expanded \n  }\n} //var lastTimeDeviceUpdated = 0\n\n\nasync function executeButtonTask(deviceData, pollUpdateCallback) {\n  //if ((new Date()).getTime() < (lastTimeDeviceUpdated + MIN_TIME_BETWEEN_UPDATES))\n  //\treturn\n  var message = deviceData;\n  message.token = Cookies.get(\"token\"); //console.log(\"Sending message:\", message)\n  //wss.send(JSON.stringify(message))\n  //lastTimeDeviceUpdated = (new Date()).getTime()\n  //pollUpdateCallback()\n} // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nfunction hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\nexport class Button extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      if (this.state.expanded && !this.state.device.passive) {\n        var currentDevice = this.state.device;\n        currentDevice.active = !currentDevice.active;\n        this.setState({\n          device: currentDevice\n        });\n        executeButtonTask(this.state.device, this.pollForUpdate);\n      }\n\n      this.state.clickFunc(this.state.index - 1);\n      expand(e, this.state.device);\n    };\n\n    this.updateButton = () => {//console.log(this.state)\n      //this.state.clickFunc(this.state.index - 1, this.state.device.\n    };\n\n    this.shrink = event => {\n      if (this.state.expanded) // The expanded button will be responsible for shrinking itself\n        {\n          console.log(event.path);\n\n          for (var i = 0; i < event.path.length; i++) {\n            var elem = event.path[i];\n\n            if (elem.classList && elem.classList.contains(\"button\")) {\n              console.log(elem);\n              var index = parseInt(elem.getAttribute(\"tabindex\"));\n\n              if (this.state.index !== index) // If we clicked ourself, don't run the shrink function\n                {\n                  this.state.clickFunc(-1);\n                }\n\n              return;\n            }\n          }\n\n          this.state.clickFunc(-1);\n        }\n    };\n\n    this.updateRGBColor = e => {\n      var input = e.currentTarget;\n      var rgb = hexToRgb(input.value);\n      var currentDevice = this.state.device;\n      currentDevice.red = rgb.r;\n      currentDevice.data.green = rgb.g;\n      currentDevice.data.blue = rgb.b;\n      this.setState({\n        device: currentDevice\n      });\n      executeButtonTask(this.state.device, this.pollForUpdate);\n    };\n\n    this.sendRemoteCommand = e => {\n      console.log(\"Sending remote command\");\n      var elem = e.currentTarget;\n      var updateData = {};\n\n      try {\n        updateData = JSON.parse(elem.value);\n      } catch (e) {}\n\n      var device = this.state.device;\n      device.data = updateData;\n      this.setState({\n        device: device\n      });\n      device.token = this.state.token; // Don't need to save the token to the state, but we do need to send it to the server for authentication\n\n      this.state.websocket.send(JSON.stringify(device));\n    };\n\n    this.state = {\n      expanded: props.expanded,\n      index: props.index,\n      device: props.device,\n      websocket: props.websocket,\n      clickFunc: props.clickFunc,\n      token: Cookies.get(\"token\")\n    }; //document.getElementById(\"content\").addEventListener(\"click\", this.shrink, false) \n\n    window.addEventListener(\"click\", this.shrink, false);\n    /*function(event) {\n    \t\t}, false)*/\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      expanded: newProps.expanded,\n      device: newProps.device\n    });\n\n    if (newProps.expanded) {}\n  }\n\n  render() {\n    let buttonInfo;\n    var image_name = \"generic\";\n    let image_type = \"png\"; //console.log(\"Botton state\", this.state)\n    //console.log(this.state.device.device_type === \"rgblights\")\n\n    if (this.state.expanded) {\n      /*if (this.state.device.passive && buttonPollHandle === -1)\n      \tbuttonPollHandle = setInterval(this.pollForUpdate, POLL_INTERVAL)\n      */\n      var optionalFields = [];\n\n      if (this.state.device.passive) {// Do passive things here\n      } else {//optionalFields.push(<div className={\"button-state state-\"+this.state.device.state}>{this.state.device.state}</div>)\n        }\n\n      if (this.state.device.device_type === \"lights\") {\n        image_name = \"lightbulb\";\n        optionalFields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-data\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.device.data.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 6\n        }, this));\n      }\n\n      if (this.state.device.device_type === \"rgblights\") {\n        image_name = \"LED\";\n        optionalFields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.device.data.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: rgbToHex(this.state.device.data.red, this.state.device.data.green, this.state.device.data.blue),\n            onChange: this.updateRGBColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this));\n      }\n\n      if (this.state.device.device_type === \"locks\") {\n        image_name = \"bolt_lock\";\n        optionalFields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-data\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.device.data.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this));\n      }\n\n      if (this.state.device.device_type === \"temperature\") {\n        image_name = \"humidity_sensor\";\n        var fields = [];\n        if (this.state.device.data.temperature) fields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Temp: \", this.state.device.data.temperature, \"\\xB0 F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 57\n        }, this));\n        if (this.state.device.data.mode) fields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Mode: \", this.state.device.data.mode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 50\n        }, this));\n        if (this.state.device.data.fan) fields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Fan: \", this.state.device.data.fan]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 49\n        }, this));\n        optionalFields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-data\",\n          children: fields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this));\n      }\n\n      if (this.state.device.device_type === \"humidity\") {\n        image_name = \"humidity_sensor\";\n        optionalFields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-data\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Humidity: \", this.state.device.data.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 6\n        }, this));\n      }\n\n      if (this.state.device.device_type === \"moisture\") {\n        image_name = \"air_conditioner\";\n      }\n\n      if (this.state.device.device_type === \"motors\") {\n        image_name = \"\";\n        optionalFields.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"{ \\\"speed\\\": -1 }\",\n            onClick: this.sendRemoteCommand,\n            children: \"Backward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"{ \\\"speed\\\": 0 }\",\n            onClick: this.sendRemoteCommand,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"{ \\\"speed\\\": 1 }\",\n            onClick: this.sendRemoteCommand,\n            children: \"Forward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 6\n        }, this));\n      }\n\n      buttonInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-description\",\n          children: this.state.device.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"at\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-location\",\n          children: this.state.device.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 5\n        }, this), optionalFields]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.device.image_name) {\n      image_name = this.state.device.image_name;\n    }\n\n    if (this.state.device.image_type) {\n      image_type = this.state.device.image_type;\n    }\n\n    var image = {\n      default: \"\"\n    };\n\n    try {\n      image = images(\"./\" + image_name + \".\" + image_type);\n    } catch (e) {\n      console.log(\"Error: unable to find icon image\", image_name, image_type);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\" + (this.state.expanded ? \" expanded\" : \"\") + (this.state.device.active | this.state.device.passive ? \"\" : \" inactive\"),\n      tabIndex: this.state.index,\n      onClick: this.handleClick,\n      onBlur: this.sherink,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-image-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.default,\n          alt: this.state.device.description,\n          className: \"button-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-text\",\n        children: this.state.device.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 5\n      }, this), buttonInfo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction PasswordButton(props) {\n  function pressButton(e) {\n    var button = e.currentTarget;\n    button.classList.add(\"active-button\");\n    setTimeout(function () {\n      button.classList.remove(\"active-button\");\n    }, 120);\n    props.handlePress(props.number);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-button\",\n    onClick: pressButton,\n    children: props.number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PasswordButton;\n\nclass ErrorMessage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: this.props.errMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass PasswordBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteNumber = e => {\n      this.props.updateIndex(e.currentTarget.getAttribute(\"data-index\"));\n    };\n\n    this.generatePasswordBox = len => {\n      let charBoxes = [];\n\n      for (var i = 0; i < len; i++) {\n        let value = \"\";\n\n        if (this.props.password[i] !== \" \") {\n          value = \"\\u2022\";\n        }\n\n        charBoxes.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-index\": i,\n          onClick: this.deleteNumber,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 19\n        }, this));\n      }\n\n      return charBoxes;\n    };\n  }\n\n  /*constructor(props)\n  {\n  \tsuper(props)\n  }*/\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-box\",\n      children: this.generatePasswordBox(this.props.maxPassLength)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport class PasswordPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateIndex = newIndex => {\n      console.log(\"before\", this.state.index, newIndex);\n      this.setState({\n        index: newIndex\n      });\n      console.log(\"after\", this.state.index, newIndex);\n      var p = this.state.password;\n      p[newIndex] = \" \";\n      this.setState({\n        password: p\n      });\n      var pass = this.state.password.join(\"\").replaceAll(\" \", \"\");\n      if (pass === \"\" && newIndex !== 0) this.updateIndex(0);\n    };\n\n    this.handlePress = number => {\n      var p = this.state.password;\n      p[this.state.index] = number;\n      this.setState({\n        password: p\n      });\n      this.setState({\n        index: (this.state.index + 1) % this.state.maxPassLength\n      });\n      p = p.join(\"\").replaceAll(\" \", \"\");\n\n      if (p.length === this.state.maxPassLength) {\n        this.authenticate(\"authenticate\", p);\n      }\n    };\n\n    this.createTable = () => {\n      let table = [];\n\n      for (var r = 0; r <= 2; r++) {\n        let cells = [];\n\n        for (var c = 1; c <= 3; c++) {\n          cells.push( /*#__PURE__*/_jsxDEV(PasswordButton, {\n            number: r * 3 + c,\n            handlePress: this.handlePress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 16\n          }, this));\n        }\n\n        table.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: cells\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }, this));\n      }\n\n      return table;\n    };\n\n    this.authenticate = async (path, data) => {\n      const response = await fetch(\"/remote/backend/\" + path, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pass: data\n        })\n      });\n      const body = await response.text();\n\n      if (response.status !== 200) {\n        console.log(\"Failed to reach backend server\");\n        throw Error(body.message);\n      }\n\n      console.log(\"Auth response\", body);\n\n      if (body === \"Invalid password\") {\n        // Show toast\n        // clear table\n        return;\n      }\n\n      const json = JSON.parse(body);\n      const midnight = new Date();\n      midnight.setHours(23, 59, 59, 999);\n      Cookies.set(\"token\", json.token, {\n        expires: midnight\n      });\n      window.location.reload();\n    };\n\n    var _pass = [];\n\n    for (var i = 0; i < props.maxPassLength; i++) _pass.push(\" \");\n\n    this.state = {\n      password: _pass,\n      errMessage: \"\",\n      maxPassLength: parseInt(props.maxPassLength),\n      index: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        msg: this.state.errMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(PasswordBox, {\n        password: this.state.password,\n        maxPassLength: this.state.maxPassLength,\n        updateIndex: this.updateIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-panel\",\n        children: this.createTable()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 178\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 10\n    }, this);\n  }\n\n}\nexport class SplashScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: props.visible\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      visible: newProps.visible\n    });\n  }\n\n  render() {\n    if (this.state.visible) {\n      document.body.parentElement.style.overflow = \"hidden\";\n    } else {\n      document.body.parentElement.style.overflow = \"\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splash-screen \" + (!this.state.visible ? \"splash-hide\" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"splash-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: loading,\n          alt: \"loading gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 12\n    }, this);\n  }\n\n} //export default Button;\n//export default PasswordPanel\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordButton\");","map":{"version":3,"sources":["/home/butlah/node/apps/remote/remote/client/src/App.js"],"names":["React","Cookies","loading","images","require","context","expand","event","deviceData","button","currentTarget","expanded","classList","contains","console","log","focus","setTimeout","scrollIntoView","block","behavior","executeButtonTask","pollUpdateCallback","message","token","get","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","hexToRgb","result","exec","parseInt","Button","Component","constructor","props","handleClick","e","state","device","passive","currentDevice","active","setState","pollForUpdate","clickFunc","index","updateButton","shrink","path","i","elem","getAttribute","updateRGBColor","input","rgb","value","red","data","green","blue","sendRemoteCommand","updateData","JSON","parse","websocket","send","stringify","window","addEventListener","componentWillReceiveProps","newProps","render","buttonInfo","image_name","image_type","optionalFields","device_type","push","fields","temperature","mode","fan","humidity","description","location","image","default","sherink","name","PasswordButton","pressButton","add","remove","handlePress","number","ErrorMessage","errMessage","PasswordBox","deleteNumber","updateIndex","generatePasswordBox","len","charBoxes","password","maxPassLength","PasswordPanel","newIndex","p","pass","join","replaceAll","authenticate","createTable","table","cells","response","fetch","method","headers","body","text","status","Error","json","midnight","Date","setHours","set","expires","reload","SplashScreen","visible","document","parentElement","style","overflow"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAACC,OAAR,CAAgB,OAAhB,EAAyB,IAAzB,CAAb,C,CAEA;AACA;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,UAAvB,EACA;AACC,MAAIC,MAAM,GAAGF,KAAK,CAACG,aAAnB;AACA,MAAIC,QAAQ,GAACF,MAAM,CAACG,SAAP,CAAiBC,QAAjB,CAA0B,UAA1B,CAAb;;AACA,MAAIF,QAAJ,EACA;AACCG,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,GAHD,MAKA;AACC;AACAN,IAAAA,MAAM,CAACO,KAAP;AACAC,IAAAA,UAAU,CAAC,YAAW;AACrBR,MAAAA,MAAM,CAACS,cAAP,CAAsB;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAtB;AACA,KAFS,EAEP,GAFO,CAAV,CAHD,CAKS;AACR;AACD,C,CAED;;;AACA,eAAeC,iBAAf,CAAiCb,UAAjC,EAA6Cc,kBAA7C,EACA;AACC;AACA;AAEA,MAAIC,OAAO,GAAGf,UAAd;AACAe,EAAAA,OAAO,CAACC,KAAR,GAAgBvB,OAAO,CAACwB,GAAR,CAAY,OAAZ,CAAhB,CALD,CAMC;AACA;AAEA;AACA;AACA,C,CAED;;;AACA,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,MAAIC,GAAG,GAAGD,CAAC,CAACE,QAAF,CAAW,EAAX,CAAV;AACA,SAAOD,GAAG,CAACE,MAAJ,KAAe,CAAf,GAAmB,MAAMF,GAAzB,GAA+BA,GAAtC;AACD;;AAED,SAASG,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACzB,SAAO,MAAMR,cAAc,CAACM,CAAD,CAApB,GAA0BN,cAAc,CAACO,CAAD,CAAxC,GAA8CP,cAAc,CAACQ,CAAD,CAAnE;AACD;;AACD,SAASC,QAAT,CAAkBP,GAAlB,EAAuB;AACrB,MAAIQ,MAAM,GAAG,4CAA4CC,IAA5C,CAAiDT,GAAjD,CAAb;AACA,SAAOQ,MAAM,GAAG;AACdJ,IAAAA,CAAC,EAAEM,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CADG;AAEdH,IAAAA,CAAC,EAAEK,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAFG;AAGdF,IAAAA,CAAC,EAAEI,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ;AAHG,GAAH,GAIT,IAJJ;AAKD;;AAED,OAAO,MAAMG,MAAN,SAAqBvC,KAAK,CAACwC,SAA3B,CAAqC;AAE3CC,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;;AADD,SAkBAC,WAlBA,GAkBeC,CAAD,IAAO;AACpB,UAAI,KAAKC,KAAL,CAAWlC,QAAX,IAAuB,CAAC,KAAKkC,KAAL,CAAWC,MAAX,CAAkBC,OAA9C,EACA;AACC,YAAIC,aAAa,GAAG,KAAKH,KAAL,CAAWC,MAA/B;AACAE,QAAAA,aAAa,CAACC,MAAd,GAAuB,CAACD,aAAa,CAACC,MAAtC;AACA,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,MAAM,EAAEE;AAAV,SAAd;AACA3B,QAAAA,iBAAiB,CAAC,KAAKwB,KAAL,CAAWC,MAAZ,EAAoB,KAAKK,aAAzB,CAAjB;AACA;;AACD,WAAKN,KAAL,CAAWO,SAAX,CAAqB,KAAKP,KAAL,CAAWQ,KAAX,GAAmB,CAAxC;AACA/C,MAAAA,MAAM,CAACsC,CAAD,EAAI,KAAKC,KAAL,CAAWC,MAAf,CAAN;AACA,KA5BD;;AAAA,SA8BAQ,YA9BA,GA8Be,MAAM,CACpB;AACA;AACA,KAjCD;;AAAA,SAmCAC,MAnCA,GAmCUhD,KAAD,IACT;AACC,UAAI,KAAKsC,KAAL,CAAWlC,QAAf,EAA0B;AAC1B;AACCG,UAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACiD,IAAlB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlD,KAAK,CAACiD,IAAN,CAAW1B,MAA/B,EAAuC2B,CAAC,EAAxC,EACA;AACC,gBAAIC,IAAI,GAAGnD,KAAK,CAACiD,IAAN,CAAWC,CAAX,CAAX;;AACA,gBAAIC,IAAI,CAAC9C,SAAL,IAAkB8C,IAAI,CAAC9C,SAAL,CAAeC,QAAf,CAAwB,QAAxB,CAAtB,EACA;AACCC,cAAAA,OAAO,CAACC,GAAR,CAAY2C,IAAZ;AACA,kBAAIL,KAAK,GAAGf,QAAQ,CAACoB,IAAI,CAACC,YAAL,CAAkB,UAAlB,CAAD,CAApB;;AACA,kBAAI,KAAKd,KAAL,CAAWQ,KAAX,KAAqBA,KAAzB,EAAkC;AAClC;AACC,uBAAKR,KAAL,CAAWO,SAAX,CAAqB,CAAC,CAAtB;AACA;;AAED;AACA;AACD;;AAED,eAAKP,KAAL,CAAWO,SAAX,CAAqB,CAAC,CAAtB;AACA;AACD,KA1DD;;AAAA,SA4DAQ,cA5DA,GA4DkBhB,CAAD,IAAO;AACvB,UAAIiB,KAAK,GAAGjB,CAAC,CAAClC,aAAd;AACA,UAAIoD,GAAG,GAAG3B,QAAQ,CAAC0B,KAAK,CAACE,KAAP,CAAlB;AACA,UAAIf,aAAa,GAAG,KAAKH,KAAL,CAAWC,MAA/B;AACAE,MAAAA,aAAa,CAACgB,GAAd,GAAoBF,GAAG,CAAC9B,CAAxB;AACAgB,MAAAA,aAAa,CAACiB,IAAd,CAAmBC,KAAnB,GAA2BJ,GAAG,CAAC7B,CAA/B;AACAe,MAAAA,aAAa,CAACiB,IAAd,CAAmBE,IAAnB,GAA0BL,GAAG,CAAC5B,CAA9B;AACA,WAAKgB,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEE;AAAV,OAAd;AAEA3B,MAAAA,iBAAiB,CAAC,KAAKwB,KAAL,CAAWC,MAAZ,EAAoB,KAAKK,aAAzB,CAAjB;AACA,KAtED;;AAAA,SAwEAiB,iBAxEA,GAwEqBxB,CAAD,IAAO;AAC1B9B,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,UAAI2C,IAAI,GAAGd,CAAC,CAAClC,aAAb;AACA,UAAI2D,UAAU,GAAG,EAAjB;;AACA,UACA;AACCA,QAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,CAACK,KAAhB,CAAb;AACA,OAHD,CAGC,OAAMnB,CAAN,EAAQ,CAAE;;AAEX,UAAIE,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACAA,MAAAA,MAAM,CAACmB,IAAP,GAAcI,UAAd;AACA,WAAKnB,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEA;AAAV,OAAd;AAEAA,MAAAA,MAAM,CAACtB,KAAP,GAAe,KAAKqB,KAAL,CAAWrB,KAA1B,CAb0B,CAaO;;AACjC,WAAKqB,KAAL,CAAW2B,SAAX,CAAqBC,IAArB,CAA0BH,IAAI,CAACI,SAAL,CAAe5B,MAAf,CAA1B;AACA,KAvFD;;AAEC,SAAKD,KAAL,GAAa;AAAElC,MAAAA,QAAQ,EAAE+B,KAAK,CAAC/B,QAAlB;AAA4B0C,MAAAA,KAAK,EAAEX,KAAK,CAACW,KAAzC;AAAgDP,MAAAA,MAAM,EAAEJ,KAAK,CAACI,MAA9D;AAAsE0B,MAAAA,SAAS,EAAE9B,KAAK,CAAC8B,SAAvF;AAAkGpB,MAAAA,SAAS,EAAEV,KAAK,CAACU,SAAnH;AAA8H5B,MAAAA,KAAK,EAAEvB,OAAO,CAACwB,GAAR,CAAY,OAAZ;AAArI,KAAb,CAFD,CAIC;;AACAkD,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKrB,MAAtC,EAA8C,KAA9C;AACC;AACH;AACE;;AAEDsB,EAAAA,yBAAyB,CAACC,QAAD,EACzB;AACC,SAAK5B,QAAL,CAAe;AAACvC,MAAAA,QAAQ,EAAEmE,QAAQ,CAACnE,QAApB;AAA8BmC,MAAAA,MAAM,EAAEgC,QAAQ,CAAChC;AAA/C,KAAf;;AACA,QAAIgC,QAAQ,CAACnE,QAAb,EACA,CACC;AACD;;AAyEDoE,EAAAA,MAAM,GAAG;AACR,QAAIC,UAAJ;AACA,QAAIC,UAAU,GAAG,SAAjB;AACA,QAAIC,UAAU,GAAG,KAAjB,CAHQ,CAKR;AACA;;AACA,QAAI,KAAKrC,KAAL,CAAWlC,QAAf,EACA;AACC;AACH;AACA;AAEG,UAAIwE,cAAc,GAAG,EAArB;;AAEA,UAAI,KAAKtC,KAAL,CAAWC,MAAX,CAAkBC,OAAtB,EACA,CACC;AACA,OAHD,MAKA,CACC;AACA;;AAED,UAAI,KAAKF,KAAL,CAAWC,MAAX,CAAkBsC,WAAlB,KAAkC,QAAtC,EACA;AACCH,QAAAA,UAAU,GAAG,WAAb;AACAE,QAAAA,cAAc,CAACE,IAAf,eACC;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA,iCACC;AAAA,sBAAM,KAAKxC,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBpB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD;AAKA;;AACD,UAAI,KAAKA,KAAL,CAAWC,MAAX,CAAkBsC,WAAlB,KAAkC,WAAtC,EACA;AACCH,QAAAA,UAAU,GAAG,KAAb;AACAE,QAAAA,cAAc,CAACE,IAAf,eAAoB;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA,kCACnB;AAAA,sBAAM,KAAKxC,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBpB;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADmB,eAEnB;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,KAAK,EAAEd,QAAQ,CAAC,KAAKc,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBD,GAAxB,EAA6B,KAAKnB,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBC,KAApD,EAA2D,KAAKrB,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBE,IAAlF,CAAnC;AAA4H,YAAA,QAAQ,EAAE,KAAKP;AAA3I;AAAA;AAAA;AAAA;AAAA,kBAFmB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB;AAIA;;AACD,UAAI,KAAKf,KAAL,CAAWC,MAAX,CAAkBsC,WAAlB,KAAkC,OAAtC,EACA;AACCH,QAAAA,UAAU,GAAG,WAAb;AACAE,QAAAA,cAAc,CAACE,IAAf,eACC;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA,iCACC;AAAA,sBAAM,KAAKxC,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBpB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD;AAKA;;AACD,UAAI,KAAKA,KAAL,CAAWC,MAAX,CAAkBsC,WAAlB,KAAkC,aAAtC,EACA;AACCH,QAAAA,UAAU,GAAG,iBAAb;AACA,YAAIK,MAAM,GAAG,EAAb;AACA,YAAI,KAAKzC,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBsB,WAA3B,EAAwCD,MAAM,CAACD,IAAP,eAAY;AAAA,+BAAY,KAAKxC,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBsB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACxC,YAAI,KAAK1C,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBuB,IAA3B,EAAiCF,MAAM,CAACD,IAAP,eAAY;AAAA,+BAAY,KAAKxC,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBuB,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACjC,YAAI,KAAK3C,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBwB,GAA3B,EAAgCH,MAAM,CAACD,IAAP,eAAY;AAAA,8BAAW,KAAKxC,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuBwB,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ;AAEhCN,QAAAA,cAAc,CAACE,IAAf,eACC;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA,oBACEC;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AAKA;;AACD,UAAI,KAAKzC,KAAL,CAAWC,MAAX,CAAkBsC,WAAlB,KAAkC,UAAtC,EACA;AACCH,QAAAA,UAAU,GAAG,iBAAb;AACAE,QAAAA,cAAc,CAACE,IAAf,eACC;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA,iCACC;AAAA,qCAAgB,KAAKxC,KAAL,CAAWC,MAAX,CAAkBmB,IAAlB,CAAuByB,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD;AAKA;;AACD,UAAI,KAAK7C,KAAL,CAAWC,MAAX,CAAkBsC,WAAlB,KAAkC,UAAtC,EACA;AACCH,QAAAA,UAAU,GAAG,iBAAb;AACA;;AACD,UAAI,KAAKpC,KAAL,CAAWC,MAAX,CAAkBsC,WAAlB,KAAkC,QAAtC,EACA;AACCH,QAAAA,UAAU,GAAG,EAAb;AACAE,QAAAA,cAAc,CAACE,IAAf,eACC;AAAA,kCACC;AAAQ,YAAA,KAAK,EAAC,mBAAd;AAAgC,YAAA,OAAO,EAAE,KAAKjB,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAQ,YAAA,KAAK,EAAC,kBAAd;AAAgC,YAAA,OAAO,EAAE,KAAKA,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAQ,YAAA,KAAK,EAAC,kBAAd;AAAgC,YAAA,OAAO,EAAE,KAAKA,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAOA;;AAEDY,MAAAA,UAAU,gBAAG;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACZ;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqC,KAAKnC,KAAL,CAAWC,MAAX,CAAkB6C;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADY,eAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFY,eAGZ;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBAAkC,KAAK9C,KAAL,CAAWC,MAAX,CAAkB8C;AAApD;AAAA;AAAA;AAAA;AAAA,gBAHY,EAIXT,cAJW;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAMA;;AAED,QAAI,KAAKtC,KAAL,CAAWC,MAAX,CAAkBmC,UAAtB,EAAkC;AAAEA,MAAAA,UAAU,GAAG,KAAKpC,KAAL,CAAWC,MAAX,CAAkBmC,UAA/B;AAA2C;;AAC/E,QAAI,KAAKpC,KAAL,CAAWC,MAAX,CAAkBoC,UAAtB,EAAkC;AAAEA,MAAAA,UAAU,GAAG,KAAKrC,KAAL,CAAWC,MAAX,CAAkBoC,UAA/B;AAA2C;;AAE/E,QAAIW,KAAK,GAAG;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAZ;;AACA,QACA;AACCD,MAAAA,KAAK,GAAG1F,MAAM,CAAC,OAAO8E,UAAP,GAAoB,GAApB,GAA0BC,UAA3B,CAAd;AACA,KAHD,CAGE,OAAMtC,CAAN,EAAQ;AAAE9B,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDkE,UAAhD,EAA4DC,UAA5D;AAAyE;;AAErF,wBACC;AAAK,MAAA,SAAS,EAAE,YAAY,KAAKrC,KAAL,CAAWlC,QAAX,GAAsB,WAAtB,GAAoC,EAAhD,KAAuD,KAAKkC,KAAL,CAAWC,MAAX,CAAkBG,MAAlB,GAA2B,KAAKJ,KAAL,CAAWC,MAAX,CAAkBC,OAA7C,GAAuD,EAAvD,GAA4D,WAAnH,CAAhB;AAAmJ,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWQ,KAAxK;AAA+K,MAAA,OAAO,EAAE,KAAKV,WAA7L;AAA0M,MAAA,MAAM,EAAE,KAAKoD,OAAvN;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACC;AAAK,UAAA,GAAG,EAAEF,KAAK,CAACC,OAAhB;AAAyB,UAAA,GAAG,EAAE,KAAKjD,KAAL,CAAWC,MAAX,CAAkB6C,WAAhD;AAA6D,UAAA,SAAS,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8B,KAAK9C,KAAL,CAAWC,MAAX,CAAkBkD;AAAhD;AAAA;AAAA;AAAA;AAAA,cAJD,EAKEhB,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AA/M0C;;AAmN5C,SAASiB,cAAT,CAAwBvD,KAAxB,EACA;AACC,WAASwD,WAAT,CAAqBtD,CAArB,EACA;AACC,QAAInC,MAAM,GAAGmC,CAAC,CAAClC,aAAf;AACAD,IAAAA,MAAM,CAACG,SAAP,CAAiBuF,GAAjB,CAAqB,eAArB;AACAlF,IAAAA,UAAU,CAAC,YAAW;AAACR,MAAAA,MAAM,CAACG,SAAP,CAAiBwF,MAAjB,CAAwB,eAAxB;AAAyC,KAAtD,EAAwD,GAAxD,CAAV;AACA1D,IAAAA,KAAK,CAAC2D,WAAN,CAAkB3D,KAAK,CAAC4D,MAAxB;AACA;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,OAAO,EAAEJ,WAA1C;AAAA,cAAwDxD,KAAK,CAAC4D;AAA9D;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;KAXQL,c;;AAaT,MAAMM,YAAN,SAA2BvG,KAAK,CAACwC,SAAjC,CAA2C;AAC1CuC,EAAAA,MAAM,GACN;AACC,wBAAO;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgC,KAAKrC,KAAL,CAAW8D;AAA3C;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAJyC;;AAO3C,MAAMC,WAAN,SAA0BzG,KAAK,CAACwC,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACzCkE,YADyC,GACzB9D,CAAD,IACf;AACC,WAAKF,KAAL,CAAWiE,WAAX,CAAuB/D,CAAC,CAAClC,aAAF,CAAgBiD,YAAhB,CAA6B,YAA7B,CAAvB;AACA,KAJwC;;AAAA,SAKzCiD,mBALyC,GAKlBC,GAAD,IACtB;AACC,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIrD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoD,GAApB,EAAyBpD,CAAC,EAA1B,EACA;AACC,YAAIM,KAAK,GAAG,EAAZ;;AACA,YAAI,KAAKrB,KAAL,CAAWqE,QAAX,CAAoBtD,CAApB,MAA2B,GAA/B,EACA;AACCM,UAAAA,KAAK,GAAG,QAAR;AACA;;AACD+C,QAAAA,SAAS,CAACzB,IAAV,eAAe;AAAK,wBAAY5B,CAAjB;AAAoB,UAAA,OAAO,EAAE,KAAKiD,YAAlC;AAAA,oBAAiD3C;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAAf;AACA;;AAED,aAAO+C,SAAP;AACA,KAnBwC;AAAA;;AAqBzC;AACD;AACA;AACA;AAEC/B,EAAAA,MAAM,GACN;AACC,wBAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+B,KAAK6B,mBAAL,CAAyB,KAAKlE,KAAL,CAAWsE,aAApC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AA7BwC;;AAgC1C,OAAO,MAAMC,aAAN,SAA4BjH,KAAK,CAACwC,SAAlC,CAA4C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;;AADD,SAaAiE,WAbA,GAaeO,QAAD,IACd;AACCpG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAK8B,KAAL,CAAWQ,KAAjC,EAAwC6D,QAAxC;AACA,WAAKhE,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAE6D;AAAT,OAAd;AACApG,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAK8B,KAAL,CAAWQ,KAAhC,EAAuC6D,QAAvC;AACA,UAAIC,CAAC,GAAG,KAAKtE,KAAL,CAAWkE,QAAnB;AACAI,MAAAA,CAAC,CAACD,QAAD,CAAD,GAAc,GAAd;AACA,WAAKhE,QAAL,CAAc;AAAE6D,QAAAA,QAAQ,EAAEI;AAAZ,OAAd;AAEA,UAAIC,IAAI,GAAG,KAAKvE,KAAL,CAAWkE,QAAX,CAAoBM,IAApB,CAAyB,EAAzB,EAA6BC,UAA7B,CAAwC,GAAxC,EAA6C,EAA7C,CAAX;AACA,UAAIF,IAAI,KAAK,EAAT,IAAeF,QAAQ,KAAK,CAAhC,EAAmC,KAAKP,WAAL,CAAiB,CAAjB;AACnC,KAxBD;;AAAA,SAyBAN,WAzBA,GAyBeC,MAAD,IACd;AACC,UAAIa,CAAC,GAAG,KAAKtE,KAAL,CAAWkE,QAAnB;AACAI,MAAAA,CAAC,CAAC,KAAKtE,KAAL,CAAWQ,KAAZ,CAAD,GAAsBiD,MAAtB;AACA,WAAKpD,QAAL,CAAc;AAAE6D,QAAAA,QAAQ,EAAEI;AAAZ,OAAd;AACA,WAAKjE,QAAL,CAAc;AAAEG,QAAAA,KAAK,EAAE,CAAC,KAAKR,KAAL,CAAWQ,KAAX,GAAmB,CAApB,IAAyB,KAAKR,KAAL,CAAWmE;AAA7C,OAAd;AAEAG,MAAAA,CAAC,GAAGA,CAAC,CAACE,IAAF,CAAO,EAAP,EAAWC,UAAX,CAAsB,GAAtB,EAA2B,EAA3B,CAAJ;;AACA,UAAIH,CAAC,CAACrF,MAAF,KAAa,KAAKe,KAAL,CAAWmE,aAA5B,EACA;AACC,aAAKO,YAAL,CAAkB,cAAlB,EAAkCJ,CAAlC;AACA;AACD,KArCD;;AAAA,SAuCAK,WAvCA,GAuCc,MACd;AACC,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIzF,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EACA;AACC,YAAI0F,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAI/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EACA;AACC+F,UAAAA,KAAK,CAACrC,IAAN,eAAW,QAAC,cAAD;AAAgB,YAAA,MAAM,EAAErD,CAAC,GAAC,CAAF,GAAML,CAA9B;AAAiC,YAAA,WAAW,EAAE,KAAK0E;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAAX;AACA;;AACDoB,QAAAA,KAAK,CAACpC,IAAN,eAAW;AAAA,oBAAMqC;AAAN;AAAA;AAAA;AAAA;AAAA,gBAAX;AACA;;AACD,aAAOD,KAAP;AACA,KApDD;;AAAA,SAsDAF,YAtDA,GAsDe,OAAO/D,IAAP,EAAaS,IAAb,KACf;AACC,YAAM0D,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqBpE,IAAtB,EAA4B;AACvDqE,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF8C;AAGvDC,QAAAA,IAAI,EAAEzD,IAAI,CAACI,SAAL,CAAe;AAAE0C,UAAAA,IAAI,EAAEnD;AAAR,SAAf;AAHiD,OAA5B,CAA5B;AAKA,YAAM8D,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;;AAEA,UAAIL,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EACA;AACCnH,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,cAAMmH,KAAK,CAACH,IAAI,CAACxG,OAAN,CAAX;AACA;;AAEDT,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BgH,IAA7B;;AACA,UAAIA,IAAI,KAAK,kBAAb,EACA;AACC;AACA;AACA;AACA;;AAED,YAAMI,IAAI,GAAG7D,IAAI,CAACC,KAAL,CAAWwD,IAAX,CAAb;AAEA,YAAMK,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,QAAT,CAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,GAA9B;AACArI,MAAAA,OAAO,CAACsI,GAAR,CAAY,OAAZ,EAAqBJ,IAAI,CAAC3G,KAA1B,EAAiC;AAACgH,QAAAA,OAAO,EAAEJ;AAAV,OAAjC;AACAzD,MAAAA,MAAM,CAACiB,QAAP,CAAgB6C,MAAhB;AACA,KAnFD;;AAEC,QAAIrB,KAAI,GAAG,EAAX;;AACA,SAAK,IAAI3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,KAAK,CAACsE,aAA1B,EAAyCvD,CAAC,EAA1C,EACC2D,KAAI,CAAC/B,IAAL,CAAU,GAAV;;AACD,SAAKxC,KAAL,GAAa;AAAEkE,MAAAA,QAAQ,EAAEK,KAAZ;AAAkBZ,MAAAA,UAAU,EAAE,EAA9B;AAAkCQ,MAAAA,aAAa,EAAE1E,QAAQ,CAACI,KAAK,CAACsE,aAAP,CAAzD;AAAgF3D,MAAAA,KAAK,EAAE;AAAvF,KAAb;AACA;;AAED0B,EAAAA,MAAM,GACN;AACC,wBAAO;AAAA,mCAAM,QAAC,YAAD;AAAc,QAAA,GAAG,EAAE,KAAKlC,KAAL,CAAW2D;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAN,eAAkD,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAK3D,KAAL,CAAWkE,QAAlC;AAA4C,QAAA,aAAa,EAAE,KAAKlE,KAAL,CAAWmE,aAAtE;AAAqF,QAAA,WAAW,EAAE,KAAKL;AAAvG;AAAA;AAAA;AAAA;AAAA,cAAlD,eAAwK;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiC,KAAKa,WAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAxK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAbiD;AAwFnD,OAAO,MAAMkB,YAAN,SAA2B1I,KAAK,CAACwC,SAAjC,CACP;AACCC,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;AACA,SAAKG,KAAL,GAAa;AAAC8F,MAAAA,OAAO,EAAEjG,KAAK,CAACiG;AAAhB,KAAb;AACA;;AAED9D,EAAAA,yBAAyB,CAACC,QAAD,EACzB;AACC,SAAK5B,QAAL,CAAc;AAAEyF,MAAAA,OAAO,EAAE7D,QAAQ,CAAC6D;AAApB,KAAd;AACA;;AAED5D,EAAAA,MAAM,GACN;AACC,QAAI,KAAKlC,KAAL,CAAW8F,OAAf,EACA;AACCC,MAAAA,QAAQ,CAACb,IAAT,CAAcc,aAAd,CAA4BC,KAA5B,CAAkCC,QAAlC,GAA6C,QAA7C;AACA,KAHD,MAKA;AACCH,MAAAA,QAAQ,CAACb,IAAT,CAAcc,aAAd,CAA4BC,KAA5B,CAAkCC,QAAlC,GAA6C,EAA7C;AACA;;AACD,wBAAS;AAAK,MAAA,SAAS,EAAE,oBAAoB,CAAC,KAAKlG,KAAL,CAAW8F,OAAZ,GAAsB,aAAtB,GAAsC,EAA1D,CAAhB;AAAA,6BACR;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BAA8B;AAAK,UAAA,GAAG,EAAEzI,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,YAAT;AAGA;;AAzBF,C,CA4BA;AACA","sourcesContent":["import React from \"react\"\nimport './App.css';\n\nimport Cookies from 'js-cookie';\n//import lightbulb from './img/lightbulb.png';\nimport loading from \"./img/loading.gif\"\n//import loading_small from \"./img/loading_small.gif\"\nvar images = require.context(\"./img\", true)\n\n//const POLL_INTERVAL = 4000;\n//const MIN_TIME_BETWEEN_UPDATES = 100; // rtt is probably something like 50ms, unit in ms\n\nfunction expand(event, deviceData)\n{\n\tvar button = event.currentTarget\n\tvar expanded=button.classList.contains(\"expanded\")\n\tif (expanded)\n\t{\n\t\tconsole.log(\"Clicked expanded button\")\n\t}\n\telse\n\t{\n\t\t//button.classList.add(\"expanded\")\n\t\tbutton.focus()\n\t\tsetTimeout(function() {\n\t\t\tbutton.scrollIntoView({ block: \"start\", behavior: \"smooth\" })\n\t\t}, 600) // Matched with transition time value in css.button.expanded \n\t}\n}\n\n//var lastTimeDeviceUpdated = 0\nasync function executeButtonTask(deviceData, pollUpdateCallback)\n{\n\t//if ((new Date()).getTime() < (lastTimeDeviceUpdated + MIN_TIME_BETWEEN_UPDATES))\n\t//\treturn\n\t\n\tvar message = deviceData\n\tmessage.token = Cookies.get(\"token\")\n\t//console.log(\"Sending message:\", message)\n\t//wss.send(JSON.stringify(message))\n\t\n\t//lastTimeDeviceUpdated = (new Date()).getTime()\n\t//pollUpdateCallback()\n}\n\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nfunction hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\nexport class Button extends React.Component {\n\n\tconstructor(props)\n\t{\n\t\tsuper(props)\n\t\tthis.state = { expanded: props.expanded, index: props.index, device: props.device, websocket: props.websocket, clickFunc: props.clickFunc, token: Cookies.get(\"token\") }\n\n\t\t//document.getElementById(\"content\").addEventListener(\"click\", this.shrink, false) \n\t\twindow.addEventListener(\"click\", this.shrink, false) \n\t\t\t/*function(event) {\n\t\t\t\t\t}, false)*/\n\t}\n\n\tcomponentWillReceiveProps(newProps)\n\t{\n\t\tthis.setState( {expanded: newProps.expanded, device: newProps.device})\n\t\tif (newProps.expanded)\n\t\t{\n\t\t}\n\t}\n\n\thandleClick = (e) => {\n\t\tif (this.state.expanded && !this.state.device.passive)\n\t\t{\n\t\t\tvar currentDevice = this.state.device\n\t\t\tcurrentDevice.active = !currentDevice.active\n\t\t\tthis.setState({ device: currentDevice })\n\t\t\texecuteButtonTask(this.state.device, this.pollForUpdate)\n\t\t}\n\t\tthis.state.clickFunc(this.state.index - 1)\n\t\texpand(e, this.state.device)\n\t}\n\n\tupdateButton = () => {\n\t\t//console.log(this.state)\n\t\t//this.state.clickFunc(this.state.index - 1, this.state.device.\n\t}\n\t\n\tshrink = (event) =>\n\t{\n\t\tif (this.state.expanded)  // The expanded button will be responsible for shrinking itself\n\t\t{\n\t\t\tconsole.log(event.path)\n\t\t\tfor (var i = 0; i < event.path.length; i++)\n\t\t\t{\n\t\t\t\tvar elem = event.path[i];\n\t\t\t\tif (elem.classList && elem.classList.contains(\"button\"))\n\t\t\t\t{\n\t\t\t\t\tconsole.log(elem)\n\t\t\t\t\tvar index = parseInt(elem.getAttribute(\"tabindex\"))\n\t\t\t\t\tif (this.state.index !== index)   // If we clicked ourself, don't run the shrink function\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.clickFunc(-1)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.state.clickFunc(-1)\n\t\t}\n\t}\n\n\tupdateRGBColor = (e) => {\n\t\tvar input = e.currentTarget\n\t\tvar rgb = hexToRgb(input.value)\n\t\tvar currentDevice = this.state.device\n\t\tcurrentDevice.red = rgb.r\n\t\tcurrentDevice.data.green = rgb.g\n\t\tcurrentDevice.data.blue = rgb.b\n\t\tthis.setState({ device: currentDevice })\n\n\t\texecuteButtonTask(this.state.device, this.pollForUpdate)\n\t}\n\n\tsendRemoteCommand = (e) => {\n\t\tconsole.log(\"Sending remote command\")\n\t\tvar elem = e.currentTarget\n\t\tvar updateData = {}\n\t\ttry\n\t\t{\n\t\t\tupdateData = JSON.parse(elem.value)\n\t\t}catch(e){}\n\n\t\tvar device = this.state.device\n\t\tdevice.data = updateData\n\t\tthis.setState({ device: device })\n\n\t\tdevice.token = this.state.token  // Don't need to save the token to the state, but we do need to send it to the server for authentication\n\t\tthis.state.websocket.send(JSON.stringify(device))\n\t}\n\n\trender() {\n\t\tlet buttonInfo;\n\t\tvar image_name = \"generic\"\n\t\tlet image_type = \"png\"\n\n\t\t//console.log(\"Botton state\", this.state)\n\t\t//console.log(this.state.device.device_type === \"rgblights\")\n\t\tif (this.state.expanded)\n\t\t{\n\t\t\t/*if (this.state.device.passive && buttonPollHandle === -1)\n\t\t\t\tbuttonPollHandle = setInterval(this.pollForUpdate, POLL_INTERVAL)\n\t\t\t*/\n\n\t\t\tvar optionalFields = []\n\n\t\t\tif (this.state.device.passive)\n\t\t\t{\n\t\t\t\t// Do passive things here\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//optionalFields.push(<div className={\"button-state state-\"+this.state.device.state}>{this.state.device.state}</div>)\n\t\t\t}\n\n\t\t\tif (this.state.device.device_type === \"lights\")\n\t\t\t{\n\t\t\t\timage_name = \"lightbulb\"\n\t\t\t\toptionalFields.push(\n\t\t\t\t\t<div className={\"button-data\"}>\n\t\t\t\t\t\t<div>{this.state.device.data.state}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (this.state.device.device_type === \"rgblights\")\n\t\t\t{\n\t\t\t\timage_name = \"LED\"\n\t\t\t\toptionalFields.push(<div className={\"button-data\"}>\n\t\t\t\t\t<div>{this.state.device.data.state}</div>\n\t\t\t\t\t<input type=\"color\" value={rgbToHex(this.state.device.data.red, this.state.device.data.green, this.state.device.data.blue)} onChange={this.updateRGBColor}></input>\n\t\t\t\t</div> )\n\t\t\t}\n\t\t\tif (this.state.device.device_type === \"locks\")\n\t\t\t{\n\t\t\t\timage_name = \"bolt_lock\"\n\t\t\t\toptionalFields.push(\n\t\t\t\t\t<div className={\"button-data\"}>\n\t\t\t\t\t\t<div>{this.state.device.data.state}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (this.state.device.device_type === \"temperature\")\n\t\t\t{\n\t\t\t\timage_name = \"humidity_sensor\"\n\t\t\t\tvar fields = []\n\t\t\t\tif (this.state.device.data.temperature) fields.push(<div>Temp: {this.state.device.data.temperature}&deg; F</div>)\n\t\t\t\tif (this.state.device.data.mode) fields.push(<div>Mode: {this.state.device.data.mode}</div>)\n\t\t\t\tif (this.state.device.data.fan) fields.push(<div>Fan: {this.state.device.data.fan}</div>)\n\n\t\t\t\toptionalFields.push(\n\t\t\t\t\t<div className={\"button-data\"}>\n\t\t\t\t\t\t{fields}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (this.state.device.device_type === \"humidity\")\n\t\t\t{\n\t\t\t\timage_name = \"humidity_sensor\"\n\t\t\t\toptionalFields.push(\n\t\t\t\t\t<div className={\"button-data\"}>\n\t\t\t\t\t\t<div>Humidity: {this.state.device.data.humidity}%</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (this.state.device.device_type === \"moisture\")\n\t\t\t{\n\t\t\t\timage_name = \"air_conditioner\"\n\t\t\t}\n\t\t\tif (this.state.device.device_type === \"motors\")\n\t\t\t{\n\t\t\t\timage_name = \"\"\n\t\t\t\toptionalFields.push(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button value='{ \"speed\": -1 }' onClick={this.sendRemoteCommand}>Backward</button>\n\t\t\t\t\t\t<button value='{ \"speed\": 0 }'  onClick={this.sendRemoteCommand}>Stop</button>\n\t\t\t\t\t\t<button value='{ \"speed\": 1 }'  onClick={this.sendRemoteCommand}>Forward</button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tbuttonInfo = <div className=\"info-wrapper\">\n\t\t\t\t<div className=\"button-description\">{this.state.device.description}</div>\n\t\t\t\t<span>at</span>\n\t\t\t\t<div className=\"button-location\">{this.state.device.location}</div>\n\t\t\t\t{optionalFields}\n\t\t\t</div>\n\t\t}\n\n\t\tif (this.state.device.image_name) { image_name = this.state.device.image_name }\n\t\tif (this.state.device.image_type) { image_type = this.state.device.image_type }\n\n\t\tvar image = {default: \"\"};\n\t\ttry\n\t\t{\n\t\t\timage = images(\"./\" + image_name + \".\" + image_type)\n\t\t} catch(e){ console.log(\"Error: unable to find icon image\", image_name, image_type) }\n\t\t\n\t\treturn (\n\t\t\t<div className={\"button\" + (this.state.expanded ? \" expanded\" : \"\") + (this.state.device.active | this.state.device.passive ? \"\" : \" inactive\" ) } tabIndex={this.state.index} onClick={this.handleClick} onBlur={this.sherink}>\n\t\t\t\t<div className=\"button-image-wrapper\">\n\t\t\t\t\t<img src={image.default} alt={this.state.device.description} className=\"button-image\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button-text\">{this.state.device.name}</div>\n\t\t\t\t{buttonInfo}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nfunction PasswordButton(props)\n{\n\tfunction pressButton(e)\n\t{\n\t\tvar button = e.currentTarget\n\t\tbutton.classList.add(\"active-button\")\n\t\tsetTimeout(function() {button.classList.remove(\"active-button\")}, 120)\n\t\tprops.handlePress(props.number)\n\t}\n\n\treturn <div className=\"password-button\" onClick={pressButton}>{props.number}</div>\n}\n\nclass ErrorMessage extends React.Component {\n\trender()\n\t{\n\t\treturn <div className=\"error-message\">{this.props.errMessage}</div>\n\t}\n}\n\nclass PasswordBox extends React.Component {\n\tdeleteNumber = (e) =>\n\t{\n\t\tthis.props.updateIndex(e.currentTarget.getAttribute(\"data-index\"))\n\t}\n\tgeneratePasswordBox = (len) =>\n\t{\n\t\tlet charBoxes = []\n\t\tfor (var i = 0; i < len; i++)\n\t\t{\n\t\t\tlet value = \"\"\n\t\t\tif (this.props.password[i] !== \" \")\n\t\t\t{\n\t\t\t\tvalue = \"\\u2022\";\n\t\t\t}\n\t\t\tcharBoxes.push(<div data-index={i} onClick={this.deleteNumber}>{value}</div>)\n\t\t}\n\n\t\treturn charBoxes\n\t}\n\n\t/*constructor(props)\n\t{\n\t\tsuper(props)\n\t}*/\n\n\trender()\n\t{\n\t\treturn <div className=\"password-box\">{this.generatePasswordBox(this.props.maxPassLength)}</div>\n\t}\n}\n\nexport class PasswordPanel extends React.Component {\n\tconstructor(props)\n\t{\n\t\tsuper(props)\n\t\tvar pass = []\n\t\tfor (var i = 0; i < props.maxPassLength; i++)\n\t\t\tpass.push(\" \")\n\t\tthis.state = { password: pass, errMessage: \"\", maxPassLength: parseInt(props.maxPassLength), index: 0 }\n\t}\n\n\trender()\n\t{\n\t\treturn <div> <ErrorMessage msg={this.state.errMessage} /><PasswordBox password={this.state.password} maxPassLength={this.state.maxPassLength} updateIndex={this.updateIndex} /><div className=\"password-panel\">{this.createTable()}</div> </div>\n\t}\n\n\tupdateIndex = (newIndex) =>\n\t{\n\t\tconsole.log(\"before\", this.state.index, newIndex)\n\t\tthis.setState({ index: newIndex })\n\t\tconsole.log(\"after\", this.state.index, newIndex)\n\t\tvar p = this.state.password\n\t\tp[newIndex] = \" \"\n\t\tthis.setState({ password: p })\n\n\t\tvar pass = this.state.password.join(\"\").replaceAll(\" \", \"\")\n\t\tif (pass === \"\" && newIndex !== 0) this.updateIndex(0)\n\t}\n\thandlePress = (number) => \n\t{\n\t\tvar p = this.state.password\n\t\tp[this.state.index] = number\n\t\tthis.setState({ password: p })\n\t\tthis.setState({ index: (this.state.index + 1) % this.state.maxPassLength })\n\n\t\tp = p.join(\"\").replaceAll(\" \", \"\")\n\t\tif (p.length === this.state.maxPassLength)\n\t\t{\n\t\t\tthis.authenticate(\"authenticate\", p)\n\t\t}\n\t}\n\n\tcreateTable = () =>\n\t{\n\t\tlet table = []\n\t\tfor (var r = 0; r <= 2; r++)\n\t\t{\n\t\t\tlet cells = []\n\t\t\tfor (var c = 1; c <= 3; c++)\n\t\t\t{\n\t\t\t\tcells.push(<PasswordButton number={r*3 + c} handlePress={this.handlePress} />)\n\t\t\t}\n\t\t\ttable.push(<div>{cells}</div>)\n\t\t}\n\t\treturn table\n\t}\n\n\tauthenticate = async (path, data) =>\n\t{\n\t\tconst response = await fetch(\"/remote/backend/\" + path, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({ pass: data })\n\t\t})\n\t\tconst body = await response.text()\n\n\t\tif (response.status !== 200)\n\t\t{\n\t\t\tconsole.log(\"Failed to reach backend server\")\n\t\t\tthrow Error(body.message)\n\t\t}\n\n\t\tconsole.log(\"Auth response\", body)\n\t\tif (body === \"Invalid password\")\n\t\t{\n\t\t\t// Show toast\n\t\t\t// clear table\n\t\t\treturn\n\t\t}\n\n\t\tconst json = JSON.parse(body)\n\n\t\tconst midnight = new Date()\n\t\tmidnight.setHours(23, 59, 59, 999)\n\t\tCookies.set(\"token\", json.token, {expires: midnight} )\n\t\twindow.location.reload()\n\t}\n}\n\nexport class SplashScreen extends React.Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props)\n\t\tthis.state = {visible: props.visible} \n\t}\n\n\tcomponentWillReceiveProps(newProps)\n\t{\n\t\tthis.setState({ visible: newProps.visible })\n\t}\n\n\trender()\n\t{\n\t\tif (this.state.visible)\n\t\t{\n\t\t\tdocument.body.parentElement.style.overflow = \"hidden\"\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.body.parentElement.style.overflow = \"\"\n\t\t}\n\t\treturn ( <div className={\"splash-screen \" + (!this.state.visible ? \"splash-hide\" : \"\" )}>\n\t\t\t<div className=\"splash-image\"><img src={loading} alt=\"loading gif\" /></div>\n\t\t</div> )\n\t}\n}\n\n//export default Button;\n//export default PasswordPanel\n"]},"metadata":{},"sourceType":"module"}